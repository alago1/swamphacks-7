[{"/Users/rangerchenore/swamphacks-7/client/src/App.tsx":"1","/Users/rangerchenore/swamphacks-7/client/src/Compass.tsx":"2","/Users/rangerchenore/swamphacks-7/client/src/Filters.tsx":"3","/Users/rangerchenore/swamphacks-7/client/src/index.tsx":"4","/Users/rangerchenore/swamphacks-7/client/src/util/geolocation.ts":"5","/Users/rangerchenore/swamphacks-7/client/src/util/weighted_avg.ts":"6"},{"size":3501,"mtime":1612093458168,"results":"7","hashOfConfig":"8"},{"size":3387,"mtime":1612081754691,"results":"9","hashOfConfig":"8"},{"size":3941,"mtime":1612093429061,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611982430705,"results":"11","hashOfConfig":"8"},{"size":482,"mtime":1612076012569,"results":"12","hashOfConfig":"8"},{"size":2198,"mtime":1612094206931,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"u163ud",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rangerchenore/swamphacks-7/client/src/App.tsx",["29","30","31"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Geolocation } from \"./types/geolocation\";\nimport { attemptGetGeolocation } from \"./util/geolocation\";\nimport Compass from \"./Compass\";\nimport Timer from \"./Timer\";\nimport Filters from \"./Filters\"\nimport \"./App.css\";\nimport { calculate_weighted_avg } from \"./util/weighted_avg\";\nimport {filters_active} from './Filters'\n\nfunction App() {\n  const [geolocation, setGeolocation] = useState<Geolocation>();\n  const [startSearch, setStartSearch] = useState(false);\n  const [data, setData] = useState();\n  const [weighted, setWeighted] = useState<Geolocation>();\n\n  useEffect(() => {\n    let id: NodeJS.Timeout | null = null;\n    if (startSearch) {\n      id = setInterval(() => {\n        attemptGetGeolocation(onGeolocationSuccess);\n      }, 120000);\n    }\n\n    return () => {\n      if (id) clearInterval(id);\n    };\n  }, [startSearch]);\n\n  useEffect(() => {\n    if (startSearch) attemptGetGeolocation(onGeolocationSuccess);\n  }, [startSearch]);\n\n  useEffect(() => {\n    if (geolocation?.lat && geolocation?.lng) {\n      const params = {\n        lat: String(geolocation?.lat ?? \"29.6483\"),\n        lng: String(geolocation?.lng ?? \"-82.3494\"),\n        filter: \"restaurant\",\n      };\n      const searchParams = String(new URLSearchParams(params));\n\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://us-central1-astral-outpost-303423.cloudfunctions.net/fetch_locations?${searchParams}`,\n          {\n            headers: { \"Access-Control-Allow-Origin\": \"*\" },\n          }\n        )\n        .then((res) => {\n          const res_data = res.data.map((e: any) => {\n            const rating = e.rating ?? 2.5;\n            const distance = e.distance ?? 500;\n            let buzyness = e.forecast?.venue_live_busyness ?? 100;\n            if (!buzyness)\n              buzyness = 100;\n            const types = e.types ?? [];\n\n            e.weight = Math.pow(rating, 4) / (buzyness * distance);\n            return e;\n          });\n\n          let final_res_data: any = [];\n          res.data.forEach((e: any) => {\n\n            let should_include = false;\n            e.types.forEach((type: string) => {\n              if (type in filters_active) {\n                should_include = true;\n              }\n            });\n            if (should_include || e.types.length == 0) {\n              final_res_data.push(e);\n            }\n            else {\n              console.log(\"Excluding 1\");\n            }\n          });\n\n          console.log(\"This the res data\");\n          console.dir(final_res_data);\n          setData(final_res_data);\n          setWeighted(calculate_weighted_avg(final_res_data));\n        })\n        .catch((e) => console.error(e));\n    }\n  }, [geolocation]);\n\n  const onGeolocationSuccess = (pos: any) => {\n    const crd = pos.coords;\n    setGeolocation({\n      lat: crd.latitude,\n      lng: crd.longitude,\n      accuracy: crd.accuracy,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {geolocation && <Compass lat={weighted?.lat} lng={weighted?.lng} />}\n        <button onClick={() => setStartSearch(true)} disabled={startSearch}>\n          Search for places\n        </button>\n        <Timer\n          duration={120}\n          start={startSearch}\n          onCountdownEnd={() => {\n            setWeighted(calculate_weighted_avg(data));\n          }}\n        />\n        <Filters/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rangerchenore/swamphacks-7/client/src/Compass.tsx",["32","33","34"],"/Users/rangerchenore/swamphacks-7/client/src/Filters.tsx",["35","36","37","38","39","40","41","42","43","44","45","46","47"],"/Users/rangerchenore/swamphacks-7/client/src/index.tsx",[],["48","49"],"/Users/rangerchenore/swamphacks-7/client/src/util/geolocation.ts",["50"],"import { Geolocation } from \"../types/geolocation\";\n\nconst navigation_options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0,\n};\n\nexport const attemptGetGeolocation = (\n  success: Function = () => {},\n  fail: Function = () => {}\n): any | undefined => {\n  let position = null;\n  navigator.geolocation.getCurrentPosition(\n    (pos: any) => {\n      position = success(pos);\n    },\n    fail as PositionErrorCallback,\n    navigation_options\n  );\n\n  return position;\n};\n","/Users/rangerchenore/swamphacks-7/client/src/util/weighted_avg.ts",[],{"ruleId":"51","severity":1,"message":"52","line":52,"column":17,"nodeType":"53","messageId":"54","endLine":52,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":58,"column":19,"nodeType":"53","messageId":"54","endLine":58,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":73,"column":50,"nodeType":"58","messageId":"59","endLine":73,"endColumn":52},{"ruleId":"51","severity":1,"message":"60","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":30},{"ruleId":"51","severity":1,"message":"61","line":9,"column":11,"nodeType":"53","messageId":"54","endLine":9,"endColumn":19},{"ruleId":"51","severity":1,"message":"62","line":10,"column":11,"nodeType":"53","messageId":"54","endLine":10,"endColumn":18},{"ruleId":"51","severity":1,"message":"60","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":30},{"ruleId":"51","severity":1,"message":"63","line":14,"column":10,"nodeType":"53","messageId":"54","endLine":14,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":31,"column":117,"nodeType":"66","endLine":31,"endColumn":160},{"ruleId":"64","severity":1,"message":"65","line":32,"column":119,"nodeType":"66","endLine":32,"endColumn":163},{"ruleId":"64","severity":1,"message":"65","line":33,"column":135,"nodeType":"66","endLine":33,"endColumn":187},{"ruleId":"64","severity":1,"message":"65","line":34,"column":123,"nodeType":"66","endLine":34,"endColumn":169},{"ruleId":"64","severity":1,"message":"65","line":35,"column":115,"nodeType":"66","endLine":35,"endColumn":157},{"ruleId":"64","severity":1,"message":"65","line":36,"column":127,"nodeType":"66","endLine":36,"endColumn":175},{"ruleId":"64","severity":1,"message":"65","line":37,"column":117,"nodeType":"66","endLine":37,"endColumn":160},{"ruleId":"64","severity":1,"message":"65","line":38,"column":121,"nodeType":"66","endLine":38,"endColumn":166},{"ruleId":"64","severity":1,"message":"65","line":39,"column":137,"nodeType":"66","endLine":39,"endColumn":190},{"ruleId":"64","severity":1,"message":"65","line":40,"column":119,"nodeType":"66","endLine":40,"endColumn":163},{"ruleId":"64","severity":1,"message":"65","line":41,"column":139,"nodeType":"66","endLine":41,"endColumn":193},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"51","severity":1,"message":"71","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":21},"@typescript-eslint/no-unused-vars","'res_data' is assigned a value but never used.","Identifier","unusedVar","'types' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isConstTypeReference' is defined but never used.","'startBtn' is assigned a value but never used.","'myPoint' is assigned a value but never used.","'AnySrvRecord' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'Geolocation' is defined but never used.","no-global-assign","no-unsafe-negation"]